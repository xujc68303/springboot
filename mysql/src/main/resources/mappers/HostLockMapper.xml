<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xjc.mysql.mapper.dao.HostLockMapper">
    <resultMap id="BaseResultMap" type="com.xjc.mysql.mapper.dataobject.HostLockDO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
        <result column="last_host" jdbcType="VARCHAR" property="lastHost"/>
        <result column="last_time" jdbcType="TIMESTAMP" property="lastTime"/>
        <result column="executor_name" jdbcType="VARCHAR" property="executorName"/>
        <result column="env" jdbcType="VARCHAR" property="env"/>
        <!--<result column="run_host" javaType="VARCHAR" property="runHost"/>-->
    </resultMap>

    <sql id="Base_Column_List">
        id,
        gmt_create,
        gmt_modified,
        last_host,
        last_time,
        executor_name,
        env,
        run_host
    </sql>

    <!--auto generated by MybatisCodeHelper on 2021-02-15-->
    <insert id="insertSelective" parameterType="com.xjc.mysql.mapper.dataobject.HostLockDO">
        <selectKey keyColumn="id" resultType="java.lang.Long" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
        INSERT INTO host_lock
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="lastHost != null">
                last_host,
            </if>
            <if test="lastTime != null">
                last_time,
            </if>
            <if test="executorName != null">
                executor_name,
            </if>
            <if test="env != null">
                env,
            </if>
            <if test="runHost != null">
                run_host
            </if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="gmtCreate != null">
                NOW(),
            </if>
            <if test="gmtModified != null">
                NOW(),
            </if>
            <if test="lastHost != null">
                #{lastHost,jdbcType=VARCHAR},
            </if>
            <if test="lastTime != null">
                #{lastTime,jdbcType=TIMESTAMP},
            </if>
            <if test="executorName != null">
                #{executorName,jdbcType=VARCHAR},
            </if>
            <if test="env != null">
                #{env,jdbcType=VARCHAR}
            </if>
            <if test="runHost != null">
                #{runHost,jdbcType=VARCHAR}
            </if>
        </trim>
    </insert>

    <update id="updateLastTime" parameterType="com.xjc.mysql.mapper.dataobject.HostLockDO">
        UPDATE host_lock
        <set>
            gmt_modified = NOW(),
            last_time    = NOW(),
            last_host= #{lastHost}
        </set>
        <where>
            executor_name = #{executorName}
                    AND env = #{env}
                    AND (last_host = #{lastHost} OR run_host = #{runHost})
        </where>
    </update>

    <update id="updateRunHost" parameterType="com.xjc.mysql.mapper.dataobject.HostLockDO">
        UPDATE host_lock
        <set>
            gmt_modified = NOW(),
            run_host=#{runHost}
        </set>
        <where>
            executor_name = #{executorName}
                    AND env = #{env}
        </where>
    </update>

    <select id="getByNameAndEnv" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM host_lock
        <where>
            executor_name = #{executorName}
                    AND env = #{env}
        </where>
    </select>

    <update id="updateHost" parameterType="java.lang.String">
        UPDATE host_lock
        <set>
            gmt_modified = NOW(),
            last_time    = NOW(),
            last_host= #{lastHost}
        </set>
        <where>
            executor_name = #{executorName}
                    AND env = #{env}
                    AND (
                    date_add(now(), interval - #{heartbeatTimeoutMinutes} minute) > last_time OR last_time IS NULL
                    )
        </where>
    </update>
</mapper>